# Generated by Django 5.2.6 on 2025-09-08 02:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('components', '0005_identifier'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('endpoint', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fhir_id', models.CharField(blank=True, help_text='Logical id of this artifact', max_length=64, null=True)),
                ('implicitRules', models.URLField(blank=True, help_text='Rules under which this content was created', max_length=1024, null=True)),
                ('language', models.CharField(blank=True, help_text='Language of the resource content', max_length=16, null=True)),
                ('container_id', models.PositiveIntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('alias', models.JSONField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('contact', models.ManyToManyField(blank=True, related_name='organizations', to='components.contactdetail')),
                ('container_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('endpoint', models.ManyToManyField(blank=True, related_name='organizations', to='endpoint.endpoint')),
                ('identifier', models.ManyToManyField(blank=True, related_name='organizations', to='components.identifier')),
                ('meta', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_resource', to='components.metaelement')),
                ('partOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_organizations', to='organization.organization')),
                ('text', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_resource', to='components.narrative')),
                ('type', models.ManyToManyField(blank=True, related_name='organizations', to='components.codeableconcept')),
            ],
            options={
                'db_table': 'organization',
            },
        ),
        migrations.CreateModel(
            name='OrganizationQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fhir_id', models.CharField(blank=True, max_length=64, null=True)),
                ('modifierExtension', models.JSONField(blank=True, null=True)),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_qualifications', to='components.codeableconcept')),
                ('identifier', models.ManyToManyField(blank=True, related_name='organization_qualifications', to='components.identifier')),
                ('issuer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_qualifications', to='organization.organization')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_qualifications', to='components.period')),
            ],
            options={
                'db_table': 'org_qualification',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='qualification',
            field=models.ManyToManyField(blank=True, related_name='organizations', to='organization.organizationqualification'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['name'], name='organizatio_name_bcc2ee_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['active'], name='organizatio_active_05005d_idx'),
        ),
    ]
