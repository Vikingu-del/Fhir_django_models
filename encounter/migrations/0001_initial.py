# Generated by Django 5.2.3 on 2025-09-17 13:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('components', '0019_duration_reference_relatedartifact'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fhir_id', models.CharField(blank=True, help_text='Logical id of this artifact', max_length=64, null=True)),
                ('implicitRules', models.URLField(blank=True, help_text='Rules under which this content was created', max_length=1024, null=True)),
                ('language', models.CharField(blank=True, help_text='Language of the resource content', max_length=16, null=True)),
                ('container_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in-progress', 'In Progress'), ('on-hold', 'On Hold'), ('discharged', 'Discharged'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('discontinued', 'Discontinued'), ('entered-in-error', 'Entered in Error'), ('unknown', 'Unknown')], max_length=16)),
                ('plannedStartDate', models.DateTimeField(blank=True, null=True)),
                ('plannedEndDate', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('account', models.ManyToManyField(blank=True, related_name='encounters_account', to='components.reference')),
                ('actualPeriod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actual_encounters', to='components.period')),
                ('appointment', models.ManyToManyField(blank=True, related_name='encounters_appointment', to='components.reference')),
                ('basedOn', models.ManyToManyField(blank=True, related_name='encounters_based_on', to='components.reference')),
                ('careTeam', models.ManyToManyField(blank=True, related_name='encounters_care_team', to='components.reference')),
                ('class_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounter_classes', to='components.codeableconcept')),
                ('container_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('dietPreference', models.ManyToManyField(blank=True, related_name='encounter_main_diet_preferences', to='components.codeableconcept')),
                ('episodeOfCare', models.ManyToManyField(blank=True, related_name='encounters_episode_of_care', to='components.reference')),
                ('length', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounters', to='components.duration')),
                ('meta', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_resource', to='components.metaelement')),
                ('partOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_encounters', to='encounter.encounter')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounters', to='components.period')),
                ('priority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_priorities', to='components.codeableconcept')),
                ('serviceProvider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provided_encounters', to='components.reference')),
                ('serviceType', models.ManyToManyField(blank=True, related_name='encounter_service_types', to='components.codeableconcept')),
                ('specialArrangement', models.ManyToManyField(blank=True, related_name='encounter_main_special_arrangements', to='components.codeableconcept')),
                ('specialCourtesy', models.ManyToManyField(blank=True, related_name='encounter_main_special_courtesies', to='components.codeableconcept')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounters', to='components.reference')),
                ('subjectStatus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_subject_statuses', to='components.codeableconcept')),
                ('text', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_resource', to='components.narrative')),
                ('type', models.ManyToManyField(blank=True, related_name='encounter_types', to='components.codeableconcept')),
            ],
            options={
                'db_table': 'encounter',
            },
        ),
        migrations.CreateModel(
            name='EncounterAdmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fhir_id', models.CharField(blank=True, max_length=64, null=True)),
                ('modifierExtension', models.JSONField(blank=True, null=True)),
                ('admitSource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_admit_sources', to='components.codeableconcept')),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_admission_destinations', to='components.reference')),
                ('dietPreference', models.ManyToManyField(blank=True, related_name='encounter_admission_diet_preferences', to='components.codeableconcept')),
                ('dischargeDisposition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_discharge_dispositions', to='components.codeableconcept')),
                ('encounter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admission', to='encounter.encounter')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_admission_origins', to='components.reference')),
                ('preAdmissionIdentifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_pre_admissions', to='components.identifier')),
                ('reAdmission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_readmissions', to='components.codeableconcept')),
                ('specialArrangement', models.ManyToManyField(blank=True, related_name='encounter_admission_special_arrangements', to='components.codeableconcept')),
                ('specialCourtesy', models.ManyToManyField(blank=True, related_name='encounter_admission_special_courtesies', to='components.codeableconcept')),
            ],
            options={
                'db_table': 'encounter_admission',
            },
        ),
        migrations.CreateModel(
            name='EncounterDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fhir_id', models.CharField(blank=True, max_length=64, null=True)),
                ('modifierExtension', models.JSONField(blank=True, null=True)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounter_diagnoses', to='components.reference')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='encounter.encounter')),
                ('use', models.ManyToManyField(blank=True, related_name='encounter_diagnosis_uses', to='components.codeableconcept')),
            ],
            options={
                'db_table': 'encounter_diagnosis',
            },
        ),
        migrations.CreateModel(
            name='EncounterLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fhir_id', models.CharField(blank=True, max_length=64, null=True)),
                ('modifierExtension', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('planned', 'Planned'), ('active', 'Active'), ('reserved', 'Reserved'), ('completed', 'Completed')], max_length=16, null=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='encounter.encounter')),
                ('form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_location_forms', to='components.codeableconcept')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounter_locations', to='components.reference')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_locations', to='components.period')),
            ],
            options={
                'db_table': 'encounter_location',
            },
        ),
        migrations.CreateModel(
            name='EncounterParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fhir_id', models.CharField(blank=True, max_length=64, null=True)),
                ('modifierExtension', models.JSONField(blank=True, null=True)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_participants', to='components.reference')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='encounter.encounter')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encounter_participants', to='components.period')),
                ('type', models.ManyToManyField(blank=True, related_name='encounter_participant_types', to='components.codeableconcept')),
            ],
            options={
                'db_table': 'encounter_participant',
            },
        ),
        migrations.CreateModel(
            name='EncounterReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fhir_id', models.CharField(blank=True, max_length=64, null=True)),
                ('modifierExtension', models.JSONField(blank=True, null=True)),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reasons', to='encounter.encounter')),
                ('use', models.ManyToManyField(blank=True, related_name='encounter_reason_uses', to='components.codeableconcept')),
                ('value', models.ManyToManyField(blank=True, related_name='encounter_reason_values', to='components.codeableconcept')),
            ],
            options={
                'db_table': 'encounter_reason',
            },
        ),
        migrations.AddIndex(
            model_name='encounter',
            index=models.Index(fields=['status'], name='encounter_status_c2647b_idx'),
        ),
        migrations.AddIndex(
            model_name='encounter',
            index=models.Index(fields=['plannedStartDate'], name='encounter_planned_b64433_idx'),
        ),
        migrations.AddIndex(
            model_name='encounter',
            index=models.Index(fields=['plannedEndDate'], name='encounter_planned_65e62f_idx'),
        ),
    ]
